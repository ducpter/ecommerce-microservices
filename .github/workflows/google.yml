name: 'Build and Deploy to GKE'

on:
  push:
    branches:
      - main

env:
  PROJECT_ID: 'silicon-airlock-456802-p4'
  GAR_LOCATION: 'asia-southeast1'
  GKE_CLUSTER: 'ecommerce'
  GKE_ZONE: 'asia-southeast1'
  DEPLOYMENT_NAME: 'gke-test'
  REPOSITORY: 'samples'
  IMAGE: 'static-site'

permissions:
  contents: read

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # 1. Checkout source code
      - name: 'Checkout source code'
        uses: actions/checkout@v3

      # 2. Authenticate to Google Cloud using Service Account
      - name: 'Authenticate to GCP with Service Account'
        uses: google-github-actions/auth@v1
        with:
          credentials_json: '${{ secrets.GCP_SA_KEY }}'

      # 3. Set up gcloud CLI
      - name: 'Set up gcloud CLI'
        uses: google-github-actions/setup-gcloud@v1
        with:
          project_id: ${{ env.PROJECT_ID }}

      # 4. Get GKE cluster credentials
      - name: 'Get GKE credentials'
        run: |
          gcloud container clusters get-credentials ${{ env.GKE_CLUSTER }} \
            --region ${{ env.GKE_ZONE }}

      # 5. Build and push Docker image
      - name: 'Build and push Docker image for api-gateway'
        run: |
          IMAGE_URI="${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPOSITORY }}/api-gateway:${{ github.sha }}"
          echo "IMAGE_URI: $IMAGE_URI"
          docker build -t $IMAGE_URI ./api-gateway
          docker push $IMAGE_URI
        env:
          PROJECT_ID: ${{ env.PROJECT_ID }}
          GAR_LOCATION: ${{ env.GAR_LOCATION }}
          REPOSITORY: ${{ env.REPOSITORY }}

      - name: 'Build and push Docker image for discovery-server'
        run: |
          IMAGE_URI="${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPOSITORY }}/discovery-server:${{ github.sha }}"
          echo "IMAGE_URI: $IMAGE_URI"
          docker build -t $IMAGE_URI ./discovery-server
          docker push $IMAGE_URI
        env:
          PROJECT_ID: ${{ env.PROJECT_ID }}
          GAR_LOCATION: ${{ env.GAR_LOCATION }}
          REPOSITORY: ${{ env.REPOSITORY }}

      - name: 'Build and push Docker image for product-service'
        run: |
          IMAGE_URI="${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPOSITORY }}/product-service:${{ github.sha }}"
          echo "IMAGE_URI: $IMAGE_URI"
          docker build -t $IMAGE_URI ./product-service
          docker push $IMAGE_URI
        env:
          PROJECT_ID: ${{ env.PROJECT_ID }}
          GAR_LOCATION: ${{ env.GAR_LOCATION }}
          REPOSITORY: ${{ env.REPOSITORY }}

      - name: 'Build and push Docker image for order-service'
        run: |
          IMAGE_URI="${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPOSITORY }}/order-service:${{ github.sha }}"
          echo "IMAGE_URI: $IMAGE_URI"
          docker build -t $IMAGE_URI ./order-service
          docker push $IMAGE_URI
        env:
          PROJECT_ID: ${{ env.PROJECT_ID }}
          GAR_LOCATION: ${{ env.GAR_LOCATION }}
          REPOSITORY: ${{ env.REPOSITORY }}

      - name: 'Build and push Docker image for inventory-service'
        run: |
          IMAGE_URI="${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPOSITORY }}/inventory-service:${{ github.sha }}"
          echo "IMAGE_URI: $IMAGE_URI"
          docker build -t $IMAGE_URI ./inventory-service
          docker push $IMAGE_URI
        env:
          PROJECT_ID: ${{ env.PROJECT_ID }}
          GAR_LOCATION: ${{ env.GAR_LOCATION }}
          REPOSITORY: ${{ env.REPOSITORY }}

      - name: 'Build and push Docker image for notification-service'
        run: |
          IMAGE_URI="${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPOSITORY }}/notification-service:${{ github.sha }}"
          echo "IMAGE_URI: $IMAGE_URI"
          docker build -t $IMAGE_URI ./notification-service
          docker push $IMAGE_URI
        env:
          PROJECT_ID: ${{ env.PROJECT_ID }}
          GAR_LOCATION: ${{ env.GAR_LOCATION }}
          REPOSITORY: ${{ env.REPOSITORY }}

      # 6. Deploy to GKE
      - name: 'Deploy to GKE'
        run: |
          IMAGE_URI="${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPOSITORY }}/${{ env.IMAGE }}:${{ github.sha }}"
          sed -i "s|image: .*|image: $IMAGE_URI|g" k8s/deployment.yaml
          kubectl apply -f k8s/
          kubectl rollout status deployment/${{ env.DEPLOYMENT_NAME }}
